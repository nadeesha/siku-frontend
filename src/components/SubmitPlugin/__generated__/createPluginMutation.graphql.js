/**
 * This file was generated by:
 *   relay-compiler
 *
 * @providesModule createPluginMutation.graphql
 * @generated SignedSource<<94a9be930f3d64c58d58ae47cd143d67>>
 * @relayHash de50a16266710b512b956d02e59e8b87
 * @flow
 * @nogrep
 */

/* eslint-disable */

'use strict';

/*::
import type {ConcreteBatch} from 'relay-runtime';
export type CreatePluginInput = {
  publicRepoUrl?: ?string;
  author?: ?CreatePluginInput_author;
  authorId?: ?string;
  name?: ?string;
  description?: ?string;
};

export type CreatePluginInput_author = {
  username?: ?string;
  password?: ?any;
};

export type createPluginMutationResponse = {
  changedPlugin?: ?createPluginMutationResponse_changedPlugin;
};

export type createPluginMutationResponse_changedPlugin = {
  id: string;
};
*/


/*
mutation createPluginMutation(
  $input: CreatePluginInput!
) {
  createPlugin(input: $input) {
    changedPlugin {
      id
    }
  }
}
*/

const batch /*: ConcreteBatch*/ = {
  "fragment": {
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "CreatePluginInput!",
        "defaultValue": null
      }
    ],
    "kind": "Fragment",
    "metadata": null,
    "name": "createPluginMutation",
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input",
            "type": "CreatePluginInput!"
          }
        ],
        "concreteType": "CreatePluginPayload",
        "name": "createPlugin",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "args": null,
            "concreteType": "Plugin",
            "name": "changedPlugin",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "args": null,
                "name": "id",
                "storageKey": null
              }
            ],
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ],
    "type": "Mutation"
  },
  "id": null,
  "kind": "Batch",
  "metadata": {},
  "name": "createPluginMutation",
  "query": {
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "CreatePluginInput!",
        "defaultValue": null
      }
    ],
    "kind": "Root",
    "name": "createPluginMutation",
    "operation": "mutation",
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input",
            "type": "CreatePluginInput!"
          }
        ],
        "concreteType": "CreatePluginPayload",
        "name": "createPlugin",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "args": null,
            "concreteType": "Plugin",
            "name": "changedPlugin",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "args": null,
                "name": "id",
                "storageKey": null
              }
            ],
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "text": "mutation createPluginMutation(\n  $input: CreatePluginInput!\n) {\n  createPlugin(input: $input) {\n    changedPlugin {\n      id\n    }\n  }\n}\n"
};

module.exports = batch;
