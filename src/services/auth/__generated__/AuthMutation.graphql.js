/**
 * This file was generated by:
 *   relay-compiler
 *
 * @providesModule AuthMutation.graphql
 * @generated SignedSource<<7f719afb28ecae106d5d922588849a09>>
 * @relayHash 881a284616b30b8df1ea0bd72be8711f
 * @flow
 * @nogrep
 */

/* eslint-disable */

'use strict';

/*::
import type {ConcreteBatch} from 'relay-runtime';
export type LoginUserWithAuth0LockInput = {
  identity: LoginUserWithAuth0LockInput_identity;
  access_token?: ?string;
};

export type LoginUserWithAuth0LockInput_identity = {
  userId?: ?string;
  provider?: ?string;
  connection?: ?string;
  isSocial?: ?boolean;
  expiresIn?: ?number;
};

export type AuthMutationResponse = {
  user?: ?AuthMutationResponse_user;
};

export type AuthMutationResponse_user = {
  id: string;
};
*/


/*
mutation AuthMutation(
  $input: LoginUserWithAuth0LockInput!
) {
  loginUserWithAuth0Lock(input: $input) {
    user {
      id
    }
    clientMutationId
  }
}
*/

const batch /*: ConcreteBatch*/ = {
  "fragment": {
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "LoginUserWithAuth0LockInput!",
        "defaultValue": null
      }
    ],
    "kind": "Fragment",
    "metadata": null,
    "name": "AuthMutation",
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input",
            "type": "LoginUserWithAuth0LockInput!"
          }
        ],
        "concreteType": "LoginUserWithAuth0LockPayload",
        "name": "loginUserWithAuth0Lock",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "args": null,
            "concreteType": "User",
            "name": "user",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "args": null,
                "name": "id",
                "storageKey": null
              }
            ],
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "clientMutationId",
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ],
    "type": "Mutation"
  },
  "id": null,
  "kind": "Batch",
  "metadata": {},
  "name": "AuthMutation",
  "query": {
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "LoginUserWithAuth0LockInput!",
        "defaultValue": null
      }
    ],
    "kind": "Root",
    "name": "AuthMutation",
    "operation": "mutation",
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input",
            "type": "LoginUserWithAuth0LockInput!"
          }
        ],
        "concreteType": "LoginUserWithAuth0LockPayload",
        "name": "loginUserWithAuth0Lock",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "args": null,
            "concreteType": "User",
            "name": "user",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "args": null,
                "name": "id",
                "storageKey": null
              }
            ],
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "clientMutationId",
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "text": "mutation AuthMutation(\n  $input: LoginUserWithAuth0LockInput!\n) {\n  loginUserWithAuth0Lock(input: $input) {\n    user {\n      id\n    }\n    clientMutationId\n  }\n}\n"
};

module.exports = batch;
