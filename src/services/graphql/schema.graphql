input CreatePluginInput {
  name: String!
  description: String!
  httpsGitRemote: String!
  initialGitTag: String!
}

type Mutation {
  createPlugin(plugin: CreatePluginInput!): String
}

type Plugin {
  id: String
  name: String
  description: String
  httpsGitRemote: String
  status: PluginStatus
  getPluginConfigs: [PluginConfig]
  getPluginVersions: [PluginVersion]
  getPluginEvents: [PluginEvent]
}

type PluginConfig {
  configName: String
  clientId: String
  clientSecret: String
  redirectUrl: String
  otherConfig: String
}

type PluginEvent {
  id: String
  type: String
  message: String
  getPlugin: Plugin
}

type PluginLink {
  id: String
  userConfig: String
  plugin: Plugin
}

enum PluginStatus {
  SUBMITTED
  APPROVED
  REJECTED
  DISABLED
}

type PluginUserEvent {
  id: String
  type: String
  externalSystemIdentifier: String
  pluginLink: PluginLink
  user: User
}

type PluginVersion {
  id: String
  gitTag: String
  getPlugin: Plugin
}

type Query {
  plugins: [Plugin]
  userById(id: ID!): User
  pluginById: Plugin
  authenticatedUser(token: String!): User
}

type User {
  id: String
  username: String
  pluginLinks: [PluginLink]
  events: [PluginUserEvent]
}

